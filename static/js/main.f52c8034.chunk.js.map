{"version":3,"sources":["components/announcementsList/announcement/Annoucement.js","components/announcementsList/announcement/AnnouncementInfo.js","components/announcementsList/announcement/AnnouncementFoundItems.js","components/announcementsList/AnnoucementList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Announcement","announcement","this","props","className","title","Component","AnnouncementInfo","handleClick","toggle","announcementList","date","Date","dd","getDate","mm","getMonth","year","getFullYear","similar","map","el","index","undefined","JSON","stringify","style","marginTop","description","marginBottom","width","padding","onClick","AnnouncementFoundItems","AnnoucementList","togglePop","i","setState","state","newList","filter","item","j","seen","similarList","titleArr","split","descArr","totalArr","foundTitle","foundDesc","toLowerCase","find","x","targetList","onAddItem","isOpen","onRemoveItem","onSearchItem","filteredList","idx","p","arr","length","foundElemsList","isFound","onEditItem","isEdit","handleEdit","handleInputChange","bind","handleInputSearch","event","target","value","name","e","val","elems","elem","paddingTop","background","marginRight","float","type","foundElems","paddingRight","height","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f52c8034.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Announcement extends Component { \r\n    render() {\r\n        const {announcement} = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">\r\n                    {announcement.title}\r\n                </h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Announcement;","import React, { Component } from \"react\";\r\n\r\nclass AnnouncementInfo extends Component {\r\n\r\nhandleClick = () => {\r\n  this.props.toggle();\r\n  };\r\n\r\nrender() {\r\n  const {announcement} = this.props;\r\n  const {announcementList} = this.props;\r\n  //Date\r\n  let date = new Date();\r\n  let dd = date.getDate();\r\n  let mm = date.getMonth()+1;\r\n  let year = date.getFullYear();\r\n  if(dd<10){\r\n      dd=`0${dd}`;\r\n  } \r\n  if(mm<10){\r\n      mm=`0${mm}`;\r\n  }\r\n  const similar = announcementList.map((el,index)=>{\r\n      return(\r\n        <div>\r\n          {(index<3 && el.title!==undefined && JSON.stringify(el)!==JSON.stringify(announcement[0]))?\r\n          <li key = {index} className=\"card\" style={{marginTop: \"1%\"}}>\r\n            <h2 className=\"card-header\">{el.title}</h2>\r\n            <div className=\"card-body\">\r\n              <section className=\"card-text\">{el.description}</section>\r\n            </div>\r\n          </li> : null\r\n          }\r\n        </div>\r\n        )\r\n  });\r\n  return (\r\n   <div>\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{announcement[0].title}</h2>\r\n        <div className=\"card-body\">\r\n          <section className=\"card-text\">{announcement[0].description}</section>\r\n          <h6 className=\"card-subtitle text-muted\" style={{marginTop:\"1%\"}}>Date added: {dd}/{mm}/{year}</h6>\r\n        </div>\r\n      </div>\r\n      <button style={{marginTop:\"1%\", marginBottom: \"1%\", width: \"100%\", padding: \"1%\"}} className=\"btn btn-warning\" onClick={this.handleClick}>Close</button>\r\n      <h3 className=\"alert alert-primary\">Similar announcement</h3>\r\n      {similar}\r\n   </div>\r\n  );\r\n }\r\n}\r\nexport default AnnouncementInfo;","import React, {Component} from 'react';\r\n\r\n\r\nclass AnnouncementFoundItems extends Component {\r\n    render() {\r\n        const {announcement} = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">\r\n                    {announcement.title}\r\n                </h2>\r\n                <div className=\"card-body\">\r\n                    <section className=\"card-text\">{announcement.description}</section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnnouncementFoundItems;","import React, {Component} from 'react';\r\nimport Announcement from './announcement/Annoucement';\r\nimport AnnouncementInfo from './announcement/AnnouncementInfo.js';\r\nimport AnnouncementFoundItems from './announcement/AnnouncementFoundItems';\r\n\r\nclass AnnoucementList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            announcementList: [\r\n                {\r\n                    title: 'None',\r\n                    description: 'None'\r\n                }\r\n            ],\r\n            foundElemsList: [\r\n                {\r\n                    title: 'None',\r\n                    description: 'None'\r\n                }\r\n            ],\r\n            isOpen: false,\r\n            isFound: false,\r\n            isEdit: false,\r\n            seen: false,\r\n            idx: 0,\r\n            targetList: [{}],\r\n            similarList: [{}]\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleInputSearch = this.handleInputSearch.bind(this);\r\n    }\r\n\r\n    // Show info\r\n    togglePop = (i) => {\r\n        this.setState(state => {\r\n            const newList = state.announcementList.filter((item, j) => i === j);\r\n            if(this.state.seen===false){\r\n                const similar = state.announcementList.map((item,index) => {\r\n                    let el = {...item};\r\n                    let titleArr = el.title.split(' ');\r\n                    let descArr = el.description.split(' ');\r\n                    let totalArr = {};\r\n                    let foundTitle = false;\r\n                    let foundDesc = false;\r\n                    if(el.title === newList[0].title || el.title.toLowerCase() === newList[0].title.toLowerCase() || titleArr.find(x =>x.toLowerCase()===newList[0].title.toLowerCase())){\r\n                        totalArr.title=el.title;\r\n                        foundTitle = true;\r\n                    }\r\n                    if (foundTitle === true) { totalArr.description = el.description; }\r\n                    if(el.description === newList[0].description || el.description.toLowerCase() === newList[0].description.toLowerCase() || descArr.find(x => x.toLowerCase()===newList[0].description.toLowerCase()?true:false)){\r\n                        totalArr.description=el.description;\r\n                        foundDesc = true;\r\n                    }\r\n                    if(foundDesc === true) { totalArr.title = el.title; }\r\n                    return totalArr;\r\n                });\r\n                return {\r\n                    similarList: similar,\r\n                    targetList: [...newList],\r\n                    seen: !(this.state.seen)\r\n                }\r\n            }\r\n            return {\r\n                targetList: [...newList],\r\n                seen: !(this.state.seen)\r\n            };\r\n        });\r\n    };\r\n\r\n    //Adding items to the list\r\n    onAddItem = () => {\r\n        this.setState(state => {\r\n          return {\r\n            announcementList: [...state.announcementList, {\"title\":state.title, 'description':state.description}],\r\n            isOpen: false\r\n          };\r\n      });\r\n    };\r\n\r\n    //Handle with inputs\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n     };\r\n\r\n     //Handle only with search input \r\n     handleInputSearch(e) {\r\n         const val = e.target.value;\r\n         const name = e.target.name;\r\n\r\n         this.setState({\r\n             [name]: val\r\n         });\r\n     }\r\n     \r\n    //Removing items from the list\r\n    onRemoveItem = i => {\r\n        this.setState(state => {\r\n          const newList = state.announcementList.filter((item, j) => i !== j);\r\n          return {\r\n            announcementList: [...newList],\r\n          };\r\n        });\r\n      };\r\n    \r\n    //Searching items\r\n    onSearchItem = () => {\r\n        this.setState(state => {\r\n            const filteredList = state.announcementList.filter((item,idx) => {\r\n                let p = {...item};\r\n                let arr = p.title.split(' ');\r\n                if(p.title === state.title || p.title.toLowerCase() === state.title.toLowerCase() || arr.find(x => x.toLowerCase()===state.title.toLowerCase())){\r\n                    return p\r\n                }\r\n                return null;\r\n            });\r\n            if(!state.title || filteredList.length===0) {                \r\n                return {\r\n                    isFound: false\r\n                }\r\n            }else{\r\n                return {\r\n                    foundElemsList: [...filteredList],\r\n                    isFound: true\r\n                }\r\n            }\r\n        })}\r\n\r\n    //Edit items     \r\n    onEditItem = () => {\r\n        this.setState(state => {\r\n          const list = state.announcementList.map((item,j) => {\r\n            if(j===state.idx){\r\n                return ({...item, 'title': state.title, 'description': state.description});\r\n            }else {\r\n                return item;\r\n            }\r\n          })\r\n          return {\r\n            announcementList: list,\r\n            isEdit: false\r\n          };\r\n        });\r\n      };\r\n\r\n    render(){\r\n        const elems = this.state.announcementList.map((elem, index) =>\r\n            <li key = {index} style={{paddingTop: \"10px\"}}>\r\n                <Announcement  announcement={elem}/>\r\n                <div className=\"card-text\" style={{background: '#f2f2f2', padding: '10px'}}>\r\n                    <button className=\"btn btn-primary \" style={{marginRight:\"10px\"}} onClick={()=>{this.setState({isEdit: true, idx: index});}}>Edit</button>\r\n                    <button className=\"btn btn-info\" onClick={()=>this.togglePop(index)} style={{float:'right'}}>Show Info</button>\r\n                    <button className=\"btn btn-danger\" type=\"button\" onClick={()=>this.onRemoveItem(index)}>Delete</button>\r\n                </div>\r\n            </li>\r\n        );\r\n        const foundElems = this.state.foundElemsList.map((item,index)=> {\r\n            return(\r\n            <li key={index}>\r\n                <AnnouncementFoundItems announcement={item} i={index} />\r\n            </li>\r\n            )\r\n        });\r\n        if(this.state.isEdit === true) {\r\n            return(\r\n                <div className=\"card-header\" style={{width:\"35%\"}}>\r\n                     <label className=\"input-group\">\r\n                         <h5 style={{paddingRight: \"3%\"}}>Title:</h5>\r\n                         <input style={{height: \"30px\"}} className=\"form-control\" type=\"text\" name=\"title\" onChange={this.handleInputChange}/>\r\n                     </label>\r\n                     <label className=\"input-group\" style={{marginTop:\"1%\", marginBottom: \"2%\"}}>\r\n                     <h5 style={{paddingRight: \"3%\"}}>Description:</h5>\r\n                         <input style={{height: \"30px\"}} className=\"form-control\" type=\"text\" name=\"description\" onChange={this.handleInputChange} />\r\n                     </label>\r\n                     <button type=\"submit\" className=\"btn btn-primary\" style={{width:\"100%\"}} value=\"Add\" onClick = {this.onEditItem}>Save</button>\r\n                </div>\r\n            )\r\n        }\r\n        if(this.state.isOpen === false && this.state.isEdit===false){\r\n            return(\r\n                <div>\r\n                    {this.state.seen ?\r\n                        null :\r\n                        <div>\r\n                            <button className=\"btn btn-success\" onClick={this.handleClick}>Add</button>\r\n                            <label className=\"input-group\" style={{width:\"25%\", float: \"right\"}}>\r\n                                <input className=\"form-control\" type=\"text\" name=\"title\" onChange={this.handleInputSearch} />\r\n                                <button className=\"btn btn-secondary\" onClick={this.onSearchItem}>Search</button>\r\n                            </label>\r\n                        </div>\r\n                    }\r\n                     {this.state.isFound ?\r\n                     \r\n                    <ul className=\"list-unstyled\">\r\n                        <h1>Found Annoucement:</h1>\r\n                        <li>\r\n                             {foundElems}\r\n                             <button className=\"btn btn-warning\" style={{marginTop:\"1%\"}} onClick={()=>{this.setState({isFound: false})}}>Back</button>\r\n                        </li>\r\n                    </ul>\r\n                    :\r\n                    <div>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                {this.state.seen ? <AnnouncementInfo toggle={this.togglePop} announcement={this.state.targetList} announcementList={this.state.similarList}/> :elems}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }if(this.state.isOpen === true) {\r\n            return(\r\n                <div className=\"card-header\" style={{width:\"35%\"}}>\r\n                     <label className=\"input-group\">\r\n                         <h5 style={{paddingRight: \"3%\"}}>Title:</h5>\r\n                         <input style={{height: \"30px\"}} className=\"form-control\" type=\"text\" name=\"title\" onChange={this.handleInputChange}/>\r\n                     </label>\r\n                     <label className=\"input-group\" style={{marginTop:\"1%\", marginBottom: \"2%\"}}>\r\n                     <h5 style={{paddingRight: \"3%\"}}>Description:</h5>\r\n                         <input style={{height: \"30px\"}} className=\"form-control\" type=\"text\" name=\"description\" onChange={this.handleInputChange} />\r\n                     </label>\r\n                     <input type=\"submit\" className=\"btn btn-success\" style={{width:\"100%\"}} value=\"Add\" onClick = {this.onAddItem}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    //Showing add inputs\r\n    handleClick = () => {\r\n        this.setState({\r\n            isOpen:true\r\n        })\r\n    }\r\n\r\n    //Showing edit inputs\r\n    handleEdit = () => {\r\n        this.setState({isEdit: true});\r\n      }\r\n}\r\n\r\nexport default AnnoucementList;","import React from 'react';\nimport AnnoucementList from './announcementsList/AnnoucementList';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <div>\n          <h1 className=\"display-3\">Announcements</h1>\n        </div>\n        <AnnoucementList />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}